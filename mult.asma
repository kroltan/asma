# Multiplication program
# Algorithm implemented using loops, supports negative numbers
# Always chooses number near to 0 as loop count, so it's quite fast
# Inputs:
#  R0 = First number
#  R1 = Second number
#  R2 = Result of multiplicating R0 and R1

START:
	a = R0
	b = R1

	goto NA if a < 0 # check if a is closest to 0
	goto NB if b < 0 # check if b is closest to 0
	goto CONTINUE

	NA:
	temp = -a
	goto CHOOSE_B if temp-b > 0 else CHOOSE_A
	NB:
	temp = -b
	goto CHOOSE_A if temp-a > 0 else CHOOSE_B

	CONTINUE:
	goto CHOOSE_A if a-b < 0 else CHOOSE_B # when both positive, choose smallest

	CHOOSE_A:
		loopcount = b
		summable = a
		goto PREPARE

	CHOOSE_B:
		loopcount = a
		summable = b
		goto PREPARE


	PREPARE:
		i = 0
		result = 0
		negative = 0
		# make absolute for loopcount, so sign isn't checked every iteration
		goto LOOP if loopcount > 0
		loopcount = -loopcount
		negative = 1

	LOOP:
		goto FINISH if i - loopcount <= 0

		BODY:
		result = result + summable

		i = i + 1
		goto LOOP
FINISH:
	R2 = result
	goto END if negative == 0
	R2 = -R2
END:
	goto END
